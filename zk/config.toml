# NOTE SETTINGS
[note]

# Language used when writing notes.
# This is used to generate slugs or with date formats.
language = "en"

# The default title used for new note, if no `--title` flag is provided.
default-title = "Untitled"

# Template used to generate a note's filename, without extension.
filename = "{{id}}"

# The file extension used for the notes.
extension = "md"

# Template used to generate a note's content.
# If not an absolute path, it is relative to .zk/templates/
template = "default.md"

# Configure random ID generation.

# The charset used for random IDs.
id-charset = "alphanum"

# Length of the generated IDs.
id-length = 5

# Letter case for the random IDs.
id-case = "lower"


# EXTRA VARIABLES
[extra]
author = "Eugenio A. Jimenes"


# GROUP OVERRIDES
[group.daily]
paths = ["journal/dailies"]

[group.daily.note]
filename = "{{format-date now '%Y-%m-%d'}}"
# extension = "md"
template = "daily.md"

[group.weekly]
paths = ["journal/weeklies"]

[group.weekly.note]
filename = "weekly-{{format-date now '%Y-%m-%d'}}"
template = "weekly.md"

[group.til]
paths = ["IT/tils"]

[group.til.note]
template = "til.md"

[group.english]

[group.english.note]
template = "english.md"


# MARKDOWN SETTINGS
[format.markdown]
# Enable support for #hashtags
hashtags = true
# Enable support for :colon:separated:tags:
colon-tags = true


# EXTERNAL TOOLS
[tool]

# Default editor used to open notes.
editor = "nvim"

# Pager used to scroll through long output.
pager = "less -FIRX"
## TIP:
# - <SHIFT> + <arrow down> or <arrow up> scrolls the selected document.
# - It also works with the scroll mouse button

# Command used to preview a note during interactive fzf mode.
fzf-preview = "bat -p --color=always --theme=Dracula {-1}"

# NAMED FILTERS
[filter]
recents = "--sort created- --created-after 'last two weeks'"

# COMMAND ALIASES
[alias]

# Edit the last modified note.
edlast = "zk edit --limit 1 --sort modified- $@"

# Edit the notes selected interactively among the notes created the last two weeks.
recent = "zk edit --sort created- --created-after 'last two weeks' --interactive"

# Show a random note.
lucky = "zk list --quiet --format full --sort random --limit 1"

# Search notes by tags
tag = "zk edit --interactive --tag $argv"

# Edit zk config file
config = 'nvim "$HOME/dotfiles/zk/config.toml"'

## new general note (not related with IT)
ngi = 'zk new --no-input "$ZK_NOTEBOOK_DIR/general" --title $argv'
# zk-nvim command: "<cmd>ZkNew { dir = 'IT/general', title = vim.fn.input('Title: ') }<cr>"

## new english note (not related with IT)
ne = 'zk new --no-input "$ZK_NOTEBOOK_DIR/general" --group english --title $argv'
# zk-nvim command: "<cmd>ZkNew { dir = 'general', group = 'english', title = vim.fn.input('Title: ') }<cr>"

## new IT note
nit = 'zk new --no-input "$ZK_NOTEBOOK_DIR/IT/ideas" --title $argv'
# zk-nvim command: "<cmd>ZkNew { dir='IT/ideas', title = vim.fn.input('Title: ') }<cr>"

## new daily journal entry
nd = 'zk new --no-input "$ZK_NOTEBOOK_DIR/journal/dailies" --group daily'
# zk-nvim command: "<cmd>ZkNew { dir = 'journal/dailies', group = 'daily' }<cr>"

## new weekly journal entry
nw = 'zk new --no-input "$ZK_NOTEBOOK_DIR/journal/weeklies" --group weekly'
# zk-nvim command: "<cmd>ZkNew { dir = 'journal/weeklies', group = 'weekly' }<cr>"

## new til note
ntil = 'zk new --no-input "$ZK_NOTEBOOK_DIR/IT/tils" --group til --title $argv'
# zk-nvim command: "<cmd>ZkNew { dir = 'IT/tils', group = 'til', title = vim.fn.input('Title: ') }<cr>"

## Edit all dailies interactively.
dailies = "zk edit --sort created- $ZK_NOTEBOOK_DIR/journal/dailies --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'journal/dailies' } }<cr>"

## Edit all weeklies interactively.
weeklies = "zk edit --sort created- $ZK_NOTEBOOK_DIR/journal/weeklies --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'journal/weeklies' } }<cr>"

## Edit all journal interactively (both dailies and weeklies).
journal = "zk edit --sort created- $ZK_NOTEBOOK_DIR/journal --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'journal' } }<cr>"

## Edit all it ideas interactively.
ideas = "zk edit --sort created- $ZK_NOTEBOOK_DIR/IT/ideas --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'IT/ideas' } }<cr>"

## Edit all tils interactively.
tils = "zk edit --sort created- $ZK_NOTEBOOK_DIR/IT/tils --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'IT/tils' } }<cr>"

## Edit all it interactively (til and ideas).
it = "zk edit --sort created- $ZK_NOTEBOOK_DIR/IT --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'IT' } }<cr>"

## Edit all general notes interactively.
general = "zk edit --sort created- $ZK_NOTEBOOK_DIR/general --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'general' } }<cr>"

## Edit all english notes interactively.
english = "zk edit --sort created- $ZK_NOTEBOOK_DIR/general --tag english --interactive"
# zk-nvim command: "<cmd>ZkNotes { sort = { 'modified' } , hrefs = { 'general' }, tags = { 'english' } }<cr>" 

# update zk notes
update = "cd $ZK_NOTEBOOK_DIR; git add -A; git commit -am 'updating'; git push; cd -"
# zk-nvim command: 

# remove a files
rm = "zk list --interactive --quiet --format path --delimiter0 $argv | xargs -0 rm -vf --"

# open last zk in slides
slides = "zk list --interactive --quiet --format path --delimiter0 $argv | xargs -0 slides"

# LSP (EDITOR INTEGRATION)
[lsp]

[lsp.diagnostics]
# Report titles of wiki-links as hints.
wiki-title = "hint"
# Warn for dead links between notes.
dead-link = "error"
